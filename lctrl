local module = {}

local button
local gui
local bool = true

function module.setup()
    local coregui = cloneref(game:GetService("CoreGui"))
    gui = coregui:FindFirstChild("TatsumakiHub")
    if not gui then
        local v1 = game:GetService("UserInputService")
        local v2 = game:GetService("RunService")

        local v3 = Instance.new("ScreenGui")
        v3.Name = "TatsumakiHub"
        v3.IgnoreGuiInset = true
        v3.DisplayOrder = 9999999
        v3.ResetOnSpawn = false
        v3.Parent = coregui
        gui = v3

        local v4 = Instance.new("ImageButton", v3)
        v4.Name = "LCtrl"
        v4.Size = UDim2.new(0, 50, 0, 50)
        v4.Image = "rbxassetid://14268346195"
        v4.Active = true
        v4.Selectable = false
        v4.Selected = false
        v4.ZIndex = 9999999
        v4.BackgroundColor3 = Color3.new(1, 255, 1)
        v4.ScaleType = Enum.ScaleType.Fit
        button = v4

        local v5 = Instance.new("Frame")
        v5.Size = UDim2.new(1, 0, 1, 0)
        v5.BackgroundColor3 = Color3.new(0, 0, 0)
        v5.BackgroundTransparency = 1
        v5.ZIndex = v4.ZIndex + 1
        v5.AnchorPoint = Vector2.new(0.5, 0.5)
        v5.Position = UDim2.new(0.5, 0, 0.5, 0)
        v5.Parent = v4

        local v6 = Instance.new("UICorner")
        v6.CornerRadius = UDim.new(0, 8)
        v6.Parent = v5

        v4.MouseEnter:Connect(function()
            v5.BackgroundTransparency = 0.8
        end)
        v4.MouseLeave:Connect(function()
            v5.BackgroundTransparency = 1
        end)

        local v7 = Instance.new("UICorner")
        v7.CornerRadius = UDim.new(0, 8)
        v7.Parent = v4

        local v8 = Instance.new("ImageButton", v3)
        v8.Name = "abc"
        v8.Size = UDim2.new(0, 1, 0, 1)
        v8.Image = "rbxassetid://14268346195"
        v8.Active = true
        v8.ZIndex = 9999998

        local v10 = v4.Size.X.Offset
        local v11 = v8.Size.X.Offset
        v4.Position = UDim2.new(0.5, -v10 / 2, 0, 20)
        v8.Position = UDim2.new(0.5, -v11 / 2, 0, 0)

        local dragging, dragStart, startPos, targetPos
        local speed = 8

        local function lerp(a, b, m)
            return a + (b - a) * m
        end

        local mouseStart, dragTarget

        local function update(dt)
            if not startPos then return end
            if not dragging and dragTarget then
                v4.Position = UDim2.new(startPos.X.Scale, lerp(v4.Position.X.Offset, dragTarget.X.Offset, dt * speed),
                    startPos.Y.Scale, lerp(v4.Position.Y.Offset, dragTarget.Y.Offset, dt * speed))
                return
            end
            if bool and dragging then
                local delta = mouseStart - v1:GetMouseLocation()
                local newX = startPos.X.Offset - delta.X
                local newY = startPos.Y.Offset - delta.Y
                dragTarget = UDim2.new(startPos.X.Scale, newX, startPos.Y.Scale, newY)
                v4.Position = UDim2.new(startPos.X.Scale, lerp(v4.Position.X.Offset, newX, dt * speed),
                    startPos.Y.Scale, lerp(v4.Position.Y.Offset, newY, dt * speed))
            end
        end

        v4.InputBegan:Connect(function(input)
            if bool and (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) then
                dragging = true
                dragStart = input.Position
                startPos = v4.Position
                mouseStart = v1:GetMouseLocation()
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        v2.Heartbeat:Connect(update)

        v2.RenderStepped:Connect(function()
            if not v4.Visible then
                v4.Visible = true
            end
            if v4.Selectable then
                v4.Selectable = false
            end
            if v4.Selected then
                v4.Selected = false
            end
            if not v3.Enabled then
                v3.Enabled = true
            end
            if not v8.Visible then
                v8.Visible = true
            end
        end)
    end
end

function module.hide(callback)
    if button and typeof(callback) == "function" then
        button.MouseButton1Click:Connect(callback)
    end
end

function module.image(arg)
    if button and typeof(arg) == "string" then
        button.Image = arg
    end
end

function module.movemeble(arg)
    if typeof(arg) == "boolean" then
        bool = arg
    end
end

function module.destroy()
    if gui then
        gui:Destroy()
    end
end

function module.cn(arg)
    if gui then
        gui.Name = tostring(arg)
    end
end

return module
